<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.peramedy</groupId>
    <artifactId>spring-boot</artifactId>
    <!--<packaging>war</packaging>-->
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>spring-boot Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <!-- spring boot-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <properties>
        <junit.version>4.12</junit.version>
        <mysql.connector-java.version>6.0.6</mysql.connector-java.version>
        <mybatis.version>3.4.4</mybatis.version>
        <mybatis-spring.version>1.3.1</mybatis-spring.version>
        <lombok.version>1.16.18</lombok.version>
        <commons-lang.voersion>3.6</commons-lang.voersion>
    </properties>

    <dependencies>

        <!-- web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- jdbc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- actuator (spring-boot 监控) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- hateoasUI (监控端点) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>

        <!-- actuator 文档插件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator-docs</artifactId>
        </dependency>

        <!-- hateoas(查看监控端点url：图形化界面) -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>hal-browser</artifactId>
        </dependency>


        <!-- java连接mysql驱动chr -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector-java.version}</version>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <!-- mybatis-spring -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang.voersion}</version>
        </dependency>

        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>spring-boot</finalName>

        <!-- maven打包动态修改替换占位符 @@-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <!-- spring-boot-maven-plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>

                    <!-- 配置dockerHost 必须开启docker remote api -->
                    <dockerHost>http://192.168.136.130:2375</dockerHost>

                    <!-- 配置docker私服 -->
                    <!--<serverId>dockerNexus</serverId>-->
                    <!--<registryUrl>http://192.168.136.130:18082</registryUrl>-->

                    <!-- docker镜像名称 -->
                    <imageName>${project.artifactId}</imageName>

                    <!-- 可选项 每次docker:build都重新tag -->
                    <forceTags>true</forceTags>

                    <!-- docker tag 可多个tag -->
                    <imageTags>
                        <imageTag>latest</imageTag>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>

                    <!-- Dockerfile 所在的文件目录 -->
                    <dockerDirectory>${project.build.outputDirectory}</dockerDirectory>

                    <resources>
                        <resource>
                            <!-- 用于指定需要复制的根目录 ${project.build.directory} 表示 target 目录 -->
                            <directory>${project.build.directory}</directory>
                            <!-- 指定要复制的文件，即为maven打包后生产的jar文件 -->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>

                </configuration>

            </plugin>

        </plugins>

    </build>


</project>
